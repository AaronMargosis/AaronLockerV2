// OfficeMacroGpoData.h
// Data structures to aggregate related Group Policy configuration settings.

#include <Windows.h>

/// <summary>
/// Information about a Group Policy setting, independent of the configuration option selected by the IT admin.
/// Granularity is the reg key/value level. A single GPO path/setting name can map to multiple registry keys/values.
/// Microsoft Policy Analyzer is used to gather this information.
/// </summary>
struct GpoDefn_t
{
	// Computer Configuration or User Configuration
	bool bIsMachine;
	// Where the setting appears in the Group Policy editor
	const wchar_t* szGpoEditorPath;
	const wchar_t* szGpoSettingName;
	// Where the setting is configured in the registry (HKLM or HKCU based on bMachine)
	const wchar_t* szRegKey;
	const wchar_t* szRegValName;
};

/// <summary>
/// Information about a selected GPO option, at the registry value level.
/// </summary>
struct GpoItemChoice_t
{
	// Name of the selected option.
	const wchar_t* szGpoSettingChoice;
	// Registry type and data. Note that because ALL of the registry data currently used by this code to
	// control Office macro execution is either a REG_DWORD or a DWORD value represented as a REG_SZ,
	// dwRegData here can be a DWORD, and we don't need to get into the complexity of a union or
	// a class hierarchy.
	DWORD dwRegType;
	DWORD dwRegData;
};

/// <summary>
/// Combination of a GPO setting definition and a specific selected choice.
/// </summary>
struct GpoItem_t
{
	GpoDefn_t gpoDefn;
	GpoItemChoice_t gpoItemChoice;
};


// ------------------------------------------------------------------------------------------
// Arrays of related GPO settings with selected options.
// Each array's last element has a GpoDefn_t with NULL pointers.
// All the declarations below are autogenerated using MitigationsAllToCpp.ps1, using input data built by Policy Analyzer.


extern const GpoItem_t ASR_Audit[];
extern const GpoItem_t ASR_Block[];
extern const GpoItem_t ASR_Off[];
extern const GpoItem_t ASR_Warn[];
extern const GpoItem_t BlockMacrosFromRunningInOfficeFilesFromTheInternet[];
extern const GpoItem_t DisableAllUnsignedMacros_basic[];
extern const GpoItem_t DisableAllUnsignedMacros_reqTrustedPub[];
extern const GpoItem_t DisableAllUnsignedMacros_strict[];
extern const GpoItem_t DisableUnsignedVbaAddins[];
extern const GpoItem_t DisableAllTrustedLocations[];
extern const GpoItem_t DisableAllVBA[];
extern const GpoItem_t LegacyFileBlock[];
extern const GpoItem_t ScanEncryptedMacros[];


